; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "VoiceVoyager"
#define MyAppVersion "1.0"
#define MyAppPublisher "skapezMpier"
#define MyAppURL "https://www.linkedin.com/company/skapezmpier/"
#define MyAppExeName "voicevoyager.exe"

[Setup]
; Unique AppId for this application
AppId={{C2B3EA16-51EC-4AFF-AA79-2F5DEFA3A505}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\{#MyAppName}
UninstallDisplayIcon={app}\icon.ico
; Support for 64-bit systems
ArchitecturesAllowed=x64compatible
ArchitecturesInstallIn64BitMode=x64compatible
DisableProgramGroupPage=yes
; Path to the license file
LicenseFile=C:\Users\kusic\OneDrive\Desktop\audioTrans\LICENSE
PrivilegesRequiredOverridesAllowed=dialog
OutputDir=C:\Users\kusic\OneDrive\Desktop\audioTrans\installer
OutputBaseFilename=VoiceVoyager_Setup
; Set the installer icon
SetupIconFile=C:\Users\kusic\OneDrive\Desktop\audioTrans\icon.ico
; Set the wizard image (sidebar image for the installer)
WizardImageFile=C:\Users\kusic\OneDrive\Desktop\audioTrans\icon.bmp
Compression=lzma
SolidCompression=yes
WizardStyle=modern

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
; Main executable
Source: "C:\Users\kusic\OneDrive\Desktop\audioTrans\dist\{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
; Icon file
Source: "C:\Users\kusic\OneDrive\Desktop\audioTrans\icon.ico"; DestDir: "{app}"; Flags: ignoreversion
; Configuration files (preserve existing files during upgrades)
Source: "C:\Users\kusic\OneDrive\Desktop\audioTrans\api_config.json"; DestDir: "{app}"; Flags: ignoreversion onlyifdoesntexist
Source: "C:\Users\kusic\OneDrive\Desktop\audioTrans\voicevoyager_config.json"; DestDir: "{app}"; Flags: ignoreversion onlyifdoesntexist
; Documentation
Source: "C:\Users\kusic\OneDrive\Desktop\audioTrans\LICENSE"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\Users\kusic\OneDrive\Desktop\audioTrans\README.md"; DestDir: "{app}"; Flags: ignoreversion

[Icons]
; Start Menu shortcut with icon
Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; IconFilename: "{app}\icon.ico"
; Desktop shortcut with icon (optional, based on user selection)
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; IconFilename: "{app}\icon.ico"; Tasks: desktopicon

[Run]
; Option to launch the app after installation
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

[Code]
function CheckFFmpegInstalled: Boolean;
var
  ResultCode: Integer;
begin
  // Check if FFmpeg is already installed by running 'ffmpeg -version'
  Result := Exec('cmd.exe', '/c ffmpeg -version', '', SW_HIDE, ewWaitUntilTerminated, ResultCode) and (ResultCode = 0);
end;

procedure CurStepChanged(CurStep: TSetupStep);
var
  ResultCode: Integer;
begin
  if CurStep = ssPostInstall then
  begin
    // Skip if FFmpeg is already installed
    if CheckFFmpegInstalled then
    begin
      MsgBox('FFmpeg is already installed on your system. You can now use VoiceVoyager to process audio files.', mbInformation, MB_OK);
      Exit;
    end;

    // Attempt to install FFmpeg using Chocolatey
    if MsgBox('VoiceVoyager requires FFmpeg to process audio files. Would you like to install FFmpeg using Chocolatey? (Requires internet and admin privileges)', mbConfirmation, MB_YESNO) = IDYES then
    begin
      // Install Chocolatey
      if Exec('powershell.exe', '-NoProfile -ExecutionPolicy Bypass -Command "iex ((New-Object System.Net.WebClient).DownloadString(''https://chocolatey.org/install.ps1''))"', '', SW_HIDE, ewWaitUntilTerminated, ResultCode) then
      begin
        // Chocolatey installed successfully, now install FFmpeg
        if Exec('cmd.exe', '/c choco install ffmpeg -y', '', SW_HIDE, ewWaitUntilTerminated, ResultCode) then
        begin
          if CheckFFmpegInstalled then
          begin
            MsgBox('FFmpeg has been installed successfully via Chocolatey. You can now use VoiceVoyager to process audio files.', mbInformation, MB_OK);
            Exit;
          end;
        end;
      end;
    end;

    // If Chocolatey fails or user declines, try winget
    if MsgBox('FFmpeg installation via Chocolatey failed or was declined. Would you like to try installing FFmpeg using winget? (Requires internet and admin privileges)', mbConfirmation, MB_YESNO) = IDYES then
    begin
      if Exec('cmd.exe', '/c winget install "FFmpeg (Essentials Build)" --accept-source-agreements --accept-package-agreements', '', SW_HIDE, ewWaitUntilTerminated, ResultCode) then
      begin
        if CheckFFmpegInstalled then
        begin
          MsgBox('FFmpeg has been installed successfully via winget. You can now use VoiceVoyager to process audio files.', mbInformation, MB_OK);
          Exit;
        end;
      end;
    end;

    // If both methods fail, provide manual installation instructions
    MsgBox('FFmpeg installation failed. Please install FFmpeg manually by downloading it from ffmpeg.org and adding it to your system PATH, or use one of the following commands:' + #13#10 +
           '1. Chocolatey: choco install ffmpeg' + #13#10 +
           '2. winget: winget install "FFmpeg (Essentials Build)"', mbError, MB_OK);
  end;
end;